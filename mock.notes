pipeline {
    agent any
    
    parameters {
        string(name: 'SPRING_PROFILES_ACTIVE', defaultValue: 'dev', description: 'Spring profiles active for the application')
        string(name: 'IMAGE', defaultValue: 'your-docker-image:latest', description: 'Docker image to use for the container')
    }
    
    stages {
        stage('Deploy') {
            steps {
                script {
                    // Set environment variables for docker-compose
                    env.SPRING_PROFILES_ACTIVE = params.SPRING_PROFILES_ACTIVE
                    env.IMAGE = params.IMAGE
                    
                    // Bring up containers using docker-compose
                    sh 'docker-compose -f path/to/your/docker-compose.yml up -d'
                }
            }
        }
    }
    
    post {
        always {
            // Cleanup stage to stop and remove containers, volumes, and networks
            script {
                echo "Cleaning up Docker environment..."
                sh 'docker-compose -f path/to/your/docker-compose.yml down --remove-orphans --volumes'
                sh 'docker network prune -f'
            }
        }
    }
}
