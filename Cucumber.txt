package com.example.health;

import org.apache.kafka.clients.producer.KafkaProducer;
import org.springframework.boot.actuate.health.Health;
import org.springframework.boot.actuate.health.HealthIndicator;
import org.springframework.stereotype.Component;

@Component
public class KafkaProducerHealthIndicator implements HealthIndicator {

    private final KafkaProducer<String, String> kafkaProducer;

    public KafkaProducerHealthIndicator(KafkaProducer<String, String> kafkaProducer) {
        this.kafkaProducer = kafkaProducer;
    }

    @Override
    public Health health() {
        try {
            if (kafkaProducer != null) {
                return Health.up().withDetail("KafkaProducer", "Available").build();
            } else {
                return Health.down().withDetail("KafkaProducer", "Producer is null").build();
            }
        } catch (Exception e) {
            return Health.down(e).withDetail("KafkaProducer", "Failed to create producer").build();
        }
    }
}
