java
Copy code
package com.example.interceptor;

import org.springframework.http.HttpStatus;
import org.springframework.stereotype.Component;
import org.springframework.web.servlet.HandlerInterceptor;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;

@Component
public class ResponseInterceptor implements HandlerInterceptor {

    // Flag to monitor the health status
    private static volatile boolean isHealthy = true;

    @Override
    public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) throws IOException {
        // Check if the response contains "EXCEPTION"
        if (response.getStatus() == HttpStatus.OK.value()) {
            String responseBody = (String) request.getAttribute("responseBody");
            if (responseBody != null && responseBody.contains("EXCEPTION")) {
                isHealthy = false; // Mark health as down if exception is found
            } else {
                isHealthy = true; // Otherwise, keep it healthy
            }
        }
    }

    // Getter for health status
    public static boolean isHealthy() {
        return isHealthy;
    }
}
2. Register the Interceptor in Your Spring Boot Application:

Add the interceptor to the application’s configuration:

java
Copy code
package com.example.config;

import com.example.interceptor.ResponseInterceptor;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Configuration;
import org.springframework.web.servlet.config.annotation.InterceptorRegistry;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;

@Configuration
public class WebConfig implements WebMvcConfigurer {

    @Autowired
    private ResponseInterceptor responseInterceptor;

    @Override
    public void addInterceptors(InterceptorRegistry registry) {
        registry.addInterceptor(responseInterceptor);
    }
}
3. Create a Custom Health Indicator Based on Interceptor Status:

Implement a health indicator that reflects the interceptor’s status.

java
Copy code
package com.example.health;

import com.example.interceptor.ResponseInterceptor;
import org.springframework.boot.actuate.health.Health;
import org.springframework.boot.actuate.health.HealthIndicator;
import org.springframework.stereotype.Component;

@Component
public class TaxCalculationHealthIndicator implements HealthIndicator {

    @Override
    public Health health() {
        if (ResponseInterceptor.isHealthy()) {
            return Health.up().withDetail("TaxCalculation", "Operational").build();
        } else {
            return Health.down().withDetail("TaxCalculation", "Exception detected in response").build();
        }
    }
}
