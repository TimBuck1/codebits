package com.example.health;

import com.example.service.TaxCalculationService;
import com.example.service.TaxCalculationService.TaxCalculationException;
import org.springframework.boot.actuate.health.Health;
import org.springframework.boot.actuate.health.HealthIndicator;
import org.springframework.stereotype.Component;

@Component
public class TaxCalculationHealthIndicator implements HealthIndicator {

    private final TaxCalculationService taxCalculationService;

    public TaxCalculationHealthIndicator(TaxCalculationService taxCalculationService) {
        this.taxCalculationService = taxCalculationService;
    }

    @Override
    public Health health() {
        try {
            taxCalculationService.performTaxCalculation("test"); // Replace "test" with the real input
            return Health.up().withDetail("TaxCalculation", "Operational").build();
        } catch (TaxCalculationException e) {
            return Health.down(e).withDetail("TaxCalculation", "Exception during tax calculation: " + e.getMessage()).build();
        } catch (Exception e) {
            return Health.down(e).withDetail("TaxCalculation", "Unexpected error").build();
        }
    }
}
