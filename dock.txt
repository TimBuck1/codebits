version: '3.7'

services:
  app1:
    image: your-docker-registry/app1:latest
    ports:
      - "8081:8081"
    environment:
      - SOME_ENV_VAR=value

  app2:
    image: your-docker-registry/app2:latest
    ports:
      - "8082:8082"
    environment:
      - SOME_ENV_VAR=value

  app3:
    image: your-docker-registry/app3:latest
    ports:
      - "8083:8083"
    environment:
      - SOME_ENV_VAR=value

  app4:
    image: your-docker-registry/app4:latest
    ports:
      - "8084:8084"
    environment:
      - SOME_ENV_VAR=value

  tax-app:
    image: your-docker-registry/tax-app:latest
    ports:
      - "8085:8085"
    environment:
      - SOME_ENV_VAR=value
    depends_on:
      - app1
      - app2
      - app3
      - app4




pipeline {
    agent any

    environment {
        DOCKER_REGISTRY = 'your-docker-registry'
        DOCKER_COMPOSE_FILE = 'docker-compose.yml'
    }

    stages {
        stage('Pull Images') {
            steps {
                script {
                    // Pull the Docker images from the registry
                    sh "docker pull ${DOCKER_REGISTRY}/app1:latest"
                    sh "docker pull ${DOCKER_REGISTRY}/app2:latest"
                    sh "docker pull ${DOCKER_REGISTRY}/app3:latest"
                    sh "docker pull ${DOCKER_REGISTRY}/app4:latest"
                    sh "docker pull ${DOCKER_REGISTRY}/tax-app:latest"
                }
            }
        }

        stage('Bring Up Services') {
            steps {
                script {
                    // Bring up the applications
                    sh "docker-compose -f ${DOCKER_COMPOSE_FILE} up -d app1 app2 app3 app4"
                }
            }
        }

        stage('Wait for Services') {
            steps {
                script {
                    // Wait for the services to be healthy (you can adjust this logic as needed)
                    sleep(time: 30, unit: 'SECONDS')
                }
            }
        }

        stage('Bring Up Tax App') {
            steps {
                script {
                    // Bring up the Tax-app
                    sh "docker-compose -f ${DOCKER_COMPOSE_FILE} up -d tax-app"
                }
            }
        }

        stage('Run Performance Tests') {
            steps {
                script {
                    // Run your performance tests here
                    // For example, using a shell script or a specific performance testing tool
                    sh "./run-performance-tests.sh"
                }
            }
        }
    }

    post {
        always {
            // Clean up the Docker containers
            sh "docker-compose -f ${DOCKER_COMPOSE_FILE} down"
        }
    }
}
