import org.springframework.boot.CommandLineRunner;
import org.springframework.core.env.ConfigurableEnvironment;
import org.springframework.core.env.EnumerablePropertySource;
import org.springframework.core.env.PropertySource;
import org.springframework.stereotype.Component;
import java.util.Arrays;

@Component
public class PropertyPrinter implements CommandLineRunner {

    private final ConfigurableEnvironment environment;

    public PropertyPrinter(ConfigurableEnvironment environment) {
        this.environment = environment;
    }

    @Override
    public void run(String... args) {
        System.out.println("Active profiles: " + Arrays.toString(environment.getActiveProfiles()));

        for (PropertySource<?> propertySource : environment.getPropertySources()) {
            if (propertySource instanceof EnumerablePropertySource) {
                System.out.println("Properties from source: " + propertySource.getName());
                String[] propertyNames = ((EnumerablePropertySource<?>) propertySource).getPropertyNames();
                Arrays.sort(propertyNames);
                for (String propertyName : propertyNames) {
                    System.out.println(propertyName + "=" + environment.getProperty(propertyName));
                }
            }
        }
    }
}
