
import org.springframework.web.client.RestTemplate;
import org.springframework.http.ResponseEntity;

public class PerformanceTester {

    private final RestTemplate restTemplate;
    private final String url;

    public PerformanceTester(RestTemplate restTemplate, String url) {
        this.restTemplate = restTemplate;
        this.url = url;
    }

    public void testPerformance(int taxCount) {
        try {
            // Record the request time
            long requestTime = System.currentTimeMillis();

            // Send the request and receive the response
            ResponseEntity<String> responseEntity = restTemplate.getForEntity(url, String.class);

            // Record the response time
            long responseTime = System.currentTimeMillis();

            // Calculate the time taken for the request-response cycle in milliseconds
            long timeTaken = responseTime - requestTime;

            // Convert timeTaken from milliseconds to seconds and calculate throughput
            double throughput = (double) taxCount / (timeTaken / 1000.0);

            // Log the results
            System.out.println("Tax Count: " + taxCount);
            System.out.println("Time Taken (ms): " + timeTaken);
            System.out.println("Throughput (taxes/second): " + throughput);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static void main(String[] args) {
        // Create a RestTemplate instance
        RestTemplate restTemplate = new RestTemplate();

        // Define the endpoint URL
        String url = "http://example.com/your-endpoint";

        // Create an instance of PerformanceTester
        PerformanceTester tester = new PerformanceTester(restTemplate, url);

        // Number of taxes (this should come from your logic)
        int taxCount = 1000;

        // Call the testPerformance method
        tester.testPerformance(taxCount);
    }
}
