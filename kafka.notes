import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.MockedStatic;
import org.mockito.junit.jupiter.MockitoExtension;

import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
public class TaxHandlerTest {

    @Test
    public void testCreate_whenTaxIsDisabled() {
        // Mock the static methods of TaxEngine
        try (MockedStatic<TaxEngine> mockedTaxEngine = mockStatic(TaxEngine.class)) {
            // Arrange
            TaxEngine taxEngineMock = mock(TaxEngine.class);
            mockedTaxEngine.when(TaxEngine::getInstance).thenReturn(taxEngineMock);
            when(taxEngineMock.isTaxEnabled()).thenReturn(false);

            TaxHandler taxHandler = new TaxHandler();

            // Act
            taxHandler.create();

            // Assert
            // Verify that the flagB is set as expected or any other logic that you want to assert
            // e.g., assertFalse(taxHandler.isFlagBSet());
        }
    }
}
